{"version":3,"sources":["app/scripts/node_modules/browserify/node_modules/browser-pack/_prelude.js","app/scripts/pokey/Port.js","app/scripts/pokey/adapter_base.js","app/scripts/pokey/adapter_iframe.js","app/scripts/pokey/adapter_worker.js","app/scripts/pokey/channel.js","app/scripts/pokey/connect.js","app/scripts/pokey/main.js","app/scripts/pokey/port.js","app/scripts/pokey/sandbox.js","app/scripts/pokey/service.js","app/scripts/pokey/utils.js"],"names":[],"mappings":"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","file":"app/scripts/pokey.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","class Port {\n  constructor (pokey, port) {\n    this.pokey = pokey;\n    this.port = port;\n    this._callbacks = [];\n  }\n\n  /**\n   register an event handler for a particular event name.\n\n   @param {String} eventName the name of the event\n   @param {Function} callback the callback to call when the event occurs\n   @param {*?} binding an optional value of `this` inside of the callback\n   */\n  on (eventName, callback, binding) {\n    var pokey = this.pokey;\n\n    function wrappedCallback (event) {\n      if (event.data.type === eventName) {\n        pokey.configuration.eventCallback(() => {\n          return callback.call(binding, event.data.data);\n        });\n      }\n    }\n\n    this._callbacks.push([callback, wrappedCallback]);\n    this.port.addEventListener('message', wrappedCallback);\n  }\n  /**\n   register an event handler that is called for all events that are sent to the port, e.g. wiretaps\n   */\n  all (callback, binding) {\n    let pokey = this.pokey;\n\n    function wrappedCallback (event) {\n      pokey.configuration.eventCallback(() => {\n        callback.call(binding, event.data.type, event.data.data);\n      });\n    }\n\n    this.port.addEventListener('message', wrappedCallback);\n  }\n\n  /**\n   unregister an event handler for an event name\n   and callback\n\n   @param {String} eventName the name of the event\n   @param {Function} callback a reference to the callback that was\n   passed into `.on`.\n   */\n  off (eventName, callback) {\n    var foundCallback;\n\n    for (var i = 0, l = this._callbacks.length; i < l; i++) {\n      foundCallback = this._callbacks[i];\n      if (foundCallback[0] === callback) {\n        this.port.removeEventListener('message', foundCallback[1]);\n      }\n    }\n  }\n\n  /**\n   sends an event to the other side of the connection\n\n   @param {String} eventName the name of the event\n   @param {Structured?} data optional data to pass along with the event\n   */\n  send (eventName, data) {\n    this.port.postMessage({\n      type: eventName,\n      data: data\n    });\n  }\n\n  /**\n   @private\n   Adapters should implement this to start receiving messages from the other side of the connection. It is up to the adapter to make sure that no messages are dropped if they are sent before `start` is called.\n   */\n  start () {\n    this.port.start();\n  }\n\n  /**\n   @private\n   Adapters should implement this to stop receiving messages from the other side of the connection.\n   */\n  close () {\n    var foundCallback;\n\n    for (var i = 0, l = this._callbacks.length; i < l; i++) {\n      foundCallback = this._callbacks[i];\n      this.port.removeEventListener('message', foundCallback[1]);\n    }\n    this._callbacks = [];\n\n    this.port.close();\n  }\n\n  /**\n   sends a request to the other side of the connection\n\n   @param {String} eventName the name of the request\n   @return {Promise} a promise that will be resolved with the value\n   provided by the other side of the connection, or rejected if the other\n   side indicates retrieving the value resulted in an error. The fulfillment\n   value must be structured data.\n   */\n  request (eventName) {\n    let pokey = this.pokey;\n    let port = this;\n    let args = [].slice.call(arguments, 1);\n\n    return new Promise ((resolve, reject) => {\n      let requestId = getRequestId(pokey);\n\n      let clearObservers = () => {\n        port.off('@response:' + eventName, observer);\n        port.off('@errorResponse:' + eventName, errorObserver);\n      };\n\n      let observer = (event) => {\n        if (event.requestId === requestId) {\n          clearObservers();\n          resolve(event.data);\n        }\n      };\n\n      let errorObserver = (event) => {\n        if (event.requestId === requestId) {\n          clearObservers();\n          reject(event.data);\n        }\n      };\n\n      port.on('@response:' + eventName, observer, port);\n      port.on('@errorResponse:' + eventName, errorObserver, port);\n      port.send('@request:' + eventName, { requestId: requestId, args: args });\n    });\n  }\n\n  /**\n   This method registers a callback to be called when a request is made\n   by the other side of the connection.\n\n   The callback will be called with any arguments passed in the request.  It\n   may either return a value directly, or return a promise if the value must be\n   retrieved asynchronously.\n\n   Examples:\n\n   // This completes the request immediately.\n   service.onRequest('name', function () {\n        return 'David';\n      });\n\n\n   // This completely the request asynchronously.\n   service.onRequest('name', function () {\n        return new Oasis.RSVP.Promise(function (resolve, reject) {\n          setTimeout( function() {\n            resolve('David');\n          }, 200);\n        });\n      });\n\n   @param {String} eventName the name of the request\n   @param {Function} callback the callback to be called when a request\n   is made.\n   @param {any?} binding the value of `this` in the callback\n   */\n  onRequest (eventName, callback, binding) {\n    var self = this;\n\n    this.on('@request:' + eventName, (data) => {\n      let requestId = data.requestId,\n          args = data.args,\n          getResponse = new Promise((resolve, reject) => {\n            var value = callback.apply(binding, args);\n            if (undefined !== value) {\n              resolve(value);\n            } else {\n              reject(\"@request:\" + eventName + \" [\" + data.requestId + \"] did not return a value.  If you want to return a literal `undefined` return `Promise.resolve(undefined)`\");\n            }\n          });\n\n      getResponse.then((value) => {\n        self.send('@response:' + eventName, {\n          requestId: requestId,\n          data: value\n        });\n      }, (error) => {\n        let value = error;\n        if (error instanceof Error) {\n          value = {\n            message: error.message,\n            stack: error.stack\n          };\n        }\n        self.send('@errorResponse:' + eventName, {\n          requestId: requestId,\n          data: value\n        });\n      });\n    });\n\n  }\n}\n\nfunction getRequestId (pokey) {\n  return pokey.pokeyId + '-' + pokey.requestId++;\n}\n\nexport default Port;","import Channel from './channel';\nimport {mustImplement} from './utils';\n\nconst pokeyLoadedMessage        = \"pokeySandboxLoaded\";\nconst sandboxInitializedMessage = \"pokeySandboxInitialized\";\n\nclass AdapterBase {\n  constructor () {\n    //add unsupported capabilities e.g. to prevent capabilities from being registered\n    this._unsupportedCapabilities = [];\n  }\n\n  unsupportedCapabilities () {\n    return this._unsupportedCapabilities;\n  }\n\n  addUnsupportedCapability (capability) {\n    this._unsupportedCapabilities.push(capability);\n  }\n\n  filterCapabilities (capabilities) {\n    var unsupported = this._unsupportedCapabilities;\n    return capabilities.filter(function (capability) {\n      return unsupported.indexOf(capability) === -1;\n    });\n  }\n\n  //inherited, not static\n  createChannel (pokey) {\n    let channel = new Channel(pokey);\n    channel.port1.start();\n    return channel;\n  }\n\n  //inherited, not static\n  environmentPort (sandbox, channel) {\n    return channel.port1;\n  }\n\n  //inherited, not static\n  sandboxPort (sandbox, channel) {\n    return channel.port2;\n  }\n\n  //inherited, not static\n  proxyPort (sandbox, port) {\n    return port;\n  }\n\n  //inherited, not static\n  createInitializationMessage (sandbox) {\n    return {\n      isPokeyInitialization: true,\n      capabilities         : sandbox._capabilitiesToConnect\n    };\n  }\n\n  /*\n  Sandbox API\n  These methods are called from the sandbox, not the hosting environment\n   */\n\n  //subclasses may just delegate to this, in their own context\n  connectSandbox (receiver, pokey) {\n    let adapter = this;\n\n    //todo - consistency in event data\n    function initializePokeySandbox (event) {\n      if (!event.data.isPokeyInitialization) {\n        return;\n      }\n\n      receiver.removeEventListener('message', initializePokeySandbox);\n      adapter.initializePokeySandbox(event, pokey);\n    }\n\n    receiver.addEventListener('message', initializePokeySandbox);\n\n    adapter.pokeyLoaded(pokey);\n  }\n\n  initializePokeySandbox (event, pokey) {\n    let adapter = this;\n    pokey.configuration.eventCallback(function () {\n      pokey.connectCapabilities(event.data.capabilities, event.ports);\n      adapter.didConnect(pokey);\n    });\n  }\n\n  // subclasses should implement\n  // called when pokey has loaded (completed initial setup), send message to start handshake (trigger pokeyLoadHandler)\n  pokeyLoaded () {}\n\n  // subclasses should implement\n  // called after capabilities connected, send message back to complete handshake (trigger initializationHandler)\n  didConnect () {}\n}\n\nObject.assign(AdapterBase.prototype, {\n  initializeSandbox        : mustImplement('AdapterBase', 'initializeSandbox'),\n  pokeyLoadedMessage,\n  sandboxInitializedMessage\n});\n\n//note - cannot assign readonly field 'name'\n\nexport default AdapterBase;","import {UUID} from './utils';\nimport AdapterBase from './adapter_base';\n\nclass AdapterIFrame extends AdapterBase {\n  constructor () {\n    super();\n  }\n\n  static name (sandbox) {\n    return sandbox.el.name;\n  }\n\n  /*\n  Environment\n  Methods called by the hosting environment\n   */\n\n  /**\n   * For the iFrame, we:\n   * (1) create the iFrame, and register it on sandbox.el\n   * (2) set up listeners (see handshake doc)\n   *    (1) error handler\n   *    (2) loaded event\n   *    (3) initialize event\n   * @param sandbox\n   */\n  initializeSandbox (sandbox) {\n    let options           = sandbox.options,\n        iframe            = document.createElement('iframe'),\n        sandboxAttributes = ['allow-scripts']; //todo - can allow more...\n\n    iframe.name     = sandbox.options.url + '?uuid=' + UUID();\n    iframe.sandbox  = sandboxAttributes.join(' ');\n    iframe.seamless = true;\n\n    //todo - make options more explicit, give own object?\n    // rendering-specific code\n    if (options.width) {\n      iframe.width = options.width;\n    } else if (options.height) {\n      iframe.height = options.height;\n    }\n\n    // Error handling inside the iFrame\n    iframe.errorHandler = function (event) {\n      if (!event.data.sandboxException) {\n        return;\n      }\n      try {\n        // verify this message came from the expected sandbox; try/catch\n        // because ie8 will disallow reading contentWindow in the case of\n        // another sandbox's message\n        if (event.source !== iframe.contentWindow) {\n          return;\n        }\n      } catch (e) {\n        return;\n      }\n\n      sandbox.onerror(event.data.sandboxException);\n    };\n    window.addEventListener('message', iframe.errorHandler, false);\n\n    //verify\n    verifySandbox(sandbox.pokey, sandbox.options.url);\n    iframe.src          = sandbox.options.url;\n\n    // Promise that sandbox has loaded and services connected at least once. This does not mean that the sandbox will be loaded & connected in the face of reconnects (eg pages that navigate)\n    sandbox.loadDeferred.resolve(new Promise(function (resolve, reject) {\n      iframe.initializationHandler = function (event) {\n        if (event.data !== sandbox.adapter.sandboxInitializedMessage) {\n          return;\n        }\n        try {\n          // verify this message came from the expected sandbox; try/catch because ie8 will disallow reading contentWindow in the case of another sandbox's message\n          if (event.source !== iframe.contentWindow) {\n            return;\n          }\n        } catch (e) {\n          return;\n        }\n        window.removeEventListener('message', iframe.initializationHandler);\n\n        sandbox.pokey.configuration.eventCallback(function () {\n          //iframe sandbox has initialized (services connected)\n          resolve(sandbox);\n        });\n      };\n      window.addEventListener('message', iframe.initializationHandler);\n    }));\n\n    sandbox.el = iframe;\n\n    iframe.pokeyLoadHandler = function (event) {\n      if (event.data !== sandbox.adapter.pokeyLoadedMessage) {\n        return;\n      }\n      try {\n        // verify this message came from the expected sandbox; try/catch\n        // because ie8 will disallow reading contentWindow in the case of\n        // another sandbox's message\n        if (event.source !== iframe.contentWindow) {\n          return;\n        }\n      } catch (e) {\n        return;\n      }\n\n      //iFrame has loaded Pokey...\n\n      if (verifyCurrentSandboxOrigin(sandbox, event)) {\n        sandbox.createAndTransferCapabilities();\n      }\n\n      if (sandbox.options.reconnect === \"none\") {\n        window.removeEventListener('message', iframe.pokeyLoadHandler);\n      }\n    };\n    window.addEventListener('message', iframe.pokeyLoadHandler);\n  }\n\n  //programmatically start sandbox e.g. for testing\n  //generally, you want to attach the iFrame yourself, because when moved in the DOM, the iFrame is reloaded\n  startSandbox (sandbox, options) {\n    var head = document.head || document.documentElement.getElementsByTagName('head')[0];\n    head.appendChild(sandbox.el);\n  }\n\n  static terminateSandbox (sandbox) {\n    var el = sandbox.el;\n\n    sandbox.terminated = true;\n\n    if (el.loadHandler) {\n      // no load handler for HTML sandboxes\n      el.removeEventListener('load', el.loadHandler);\n    }\n    window.removeEventListener('message', el.initializationHandler);\n    window.removeEventListener('message', el.pokeyLoadHandler);\n\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    }\n\n    sandbox.el = null;\n  }\n\n  connectPorts (sandbox, ports) {\n    let rawPorts = ports.map((port) => port.port),\n        message  = this.createInitializationMessage(sandbox);\n\n    if (sandbox.terminated) {\n      return;\n    }\n\n    sandbox.el.contentWindow.postMessage(message, '*', rawPorts);\n  }\n\n  /*\n  Sandbox API\n  These methods are called from the sandbox, not the hosting environment\n   */\n\n  connectSandbox (pokey) {\n    return AdapterBase.prototype.connectSandbox.call(this, window, pokey);\n  }\n\n  pokeyLoaded () {\n    window.parent.postMessage(this.pokeyLoadedMessage, '*', []);\n  }\n\n  didConnect () {\n    window.parent.postMessage(this.sandboxInitializedMessage, '*', []);\n  }\n}\n\nfunction verifySandbox (pokey, sandboxUrl) {\n  let iframe = document.createElement('iframe');\n\n  if ((pokey.configuration.allowSameOrigin && iframe.sandbox !== undefined) ||\n    (iframe.sandbox === undefined)) {\n    // The sandbox attribute isn't supported (IE8/9) or we want a child iframe\n    // to access resources from its own domain (youtube iframe),\n    // we need to make sure the sandbox is loaded from a separate domain\n    let link  = document.createElement('a');\n    link.href = sandboxUrl;\n\n    if (!link.host || (link.protocol === window.location.protocol && link.host === window.location.host)) {\n      throw new Error(\"Security: iFrames from the same host cannot be sandboxed in older browsers and is disallowed. For HTML5 browsers supporting the `sandbox` attribute on iframes, you can add the `allow-same-origin` flag only if you host the sandbox on a separate domain.\");\n    }\n  }\n\n  //iframe will be garbage collected\n}\n\nfunction verifyCurrentSandboxOrigin (sandbox, event) {\n  if (sandbox.firstLoad || sandbox.options.reconnect === \"any\") {\n    return true;\n  }\n\n  if (!sandbox.pokey.configuration.allowSameOrigin || event.origin === \"null\") {\n    fail();\n  } else {\n    let linkOriginal = document.createElement('a'),\n        linkCurrent  = document.createElement('a');\n\n    linkOriginal.href = sandbox.options.url;\n    linkCurrent.href  = event.origin;\n\n    if (linkCurrent.protocol === linkOriginal.protocol &&\n      linkCurrent.host === linkOriginal.host) {\n      return true;\n    }\n\n    fail();\n  }\n\n  function fail () {\n    sandbox.onerror(\n      new Error(\"Error reconnecting...\"));\n  }\n}\n\nexport default AdapterIFrame;","import {UUID} from './utils';\nimport AdapterBase from './adapter_base';\n\n// note that workers must be from the same origin. To use a cross-origin worker, you need to load it into an iFrame, or create an intermediate worker and load the remote worker as a Blob (won't work in all browsers)\n\nclass AdapterWorker extends AdapterBase {\n  constructor () {\n    super();\n  }\n\n  /*\n  Environment\n  Methods called by the hosting environment\n   */\n\n  /**\n   * For the Worker, we:\n   * (1) create the Worker\n   * (2) set up listeners (see handshake doc)\n   *    (1) error handler\n   *    (2) loaded event\n   *    (3) initialize event\n   * @param sandbox\n   */\n  initializeSandbox (sandbox) {\n    let worker     = new Worker(sandbox.options.url);\n    worker.name    = sandbox.options.url + '?uuid=' + UUID();\n    sandbox.worker = worker;\n\n    // Error handling inside the worker\n    worker.errorHandler = (event) => {\n      if (!event.data.sandboxException) {\n        return;\n      }\n\n      sandbox.onerror(event.data.sandboxException);\n    };\n    worker.addEventListener('message', worker.errorHandler);\n\n    sandbox.loadDeferred.resolve(new Promise((resolve, reject) => {\n      worker.initializationHandler = function (event) {\n        sandbox.pokey.configuration.eventCallback(function () {\n          if (event.data !== sandbox.adapter.sandboxInitializedMessage) {\n            return;\n          }\n          worker.removeEventListener('message', worker.initializationHandler);\n\n          resolve(sandbox);\n        });\n      };\n      worker.addEventListener('message', worker.initializationHandler);\n    }));\n\n    worker.loadHandler = function (event) {\n      sandbox.pokey.configuration.eventCallback(function () {\n        if (event.data !== sandbox.adapter.pokeyLoadedMessage) {\n          return;\n        }\n        //worker sandbox initialized\n\n        worker.removeEventListener('message', worker.loadHandler);\n        sandbox.createAndTransferCapabilities();\n      });\n    };\n    worker.addEventListener('message', worker.loadHandler);\n  }\n\n  //e.g. for testing\n  startSandbox () {}\n\n  terminateSandbox (sandbox) {\n    let worker = sandbox.worker;\n\n    sandbox.terminated = true;\n\n    worker.removeEventListener('message', worker.loadHandler);\n    worker.removeEventListener('message', worker.initializationHandler);\n\n    sandbox.worker.terminate();\n  }\n\n  connectPorts (sandbox, ports) {\n    let rawPorts = ports.map((port) => port.port),\n        message  = this.createInitializationMessage(sandbox);\n\n    if (sandbox.terminated) {\n      return;\n    }\n\n    sandbox.worker.postMessage(message, rawPorts);\n  }\n\n  /*\n  Sandbox API\n  These methods are called from the sandbox, not the hosting environment\n   */\n\n  connectSandbox (pokey) {\n    //'self' for Worker context\n    return AdapterBase.prototype.connectSandbox.call(this, self, pokey);\n  }\n\n  pokeyLoaded () {\n    postMessage(this.pokeyLoadedMessage, []);\n  }\n\n  didConnect () {\n    postMessage(this.sandboxInitializedMessage, []);\n  }\n\n}\n\nexport default AdapterWorker;","import {mustImplement} from './utils';\nimport Port from './port';\n\nclass Channel {\n  constructor (pokey) {\n    this.channel = new MessageChannel();\n\n    this.port1 = new Port(pokey, this.channel.port1);\n    this.port2 = new Port(pokey, this.channel.port2);\n  }\n\n  start () {\n    this.port1.start();\n    this.port2.start();\n  }\n\n  destroy () {\n    this.port1.close();\n    this.port2.close();\n    delete this.port1;\n    delete this.port2;\n    delete this.channel;\n  }\n}\n\nexport default Channel;","import {assert, Deferred} from './utils';\nimport Port from './Port';\n\n//todo - refactor away from this weird setupCapability and rejectCapability thing. Maybe get rid of callbacks.\n\n/**\n * main entry point that allows sandboxes to connect back to their containing environment.\n * can just pass string (get promise), string and callback (callback), or object with named consumers.\n * @example\n // Using promises\n Oasis.connect('foo').then( function (port) {\n      port.send('hello');\n    }, function () {\n      // error\n    });\n\n * @example\n // using callbacks\n Oasis.connect('foo', function (port) {\n      port.send('hello');\n    }, errorHandler);\n *\n * @param {String} capability the name of the service to connect to, or an object containing named consumers to connect.\n * @param {Function?} callback the callback to trigger once the other side of the connection is available.\n * @param {Function?} errorCallback the callback to trigger if there is an error.\n * @return {Promise} a promise that will be resolved once the other side of the connection is available. You can use this instead of the callbacks.\n */\n\nexport function connect (capability, callback, errorCallback) {\n  if (typeof capability === 'object') {\n    return connectConsumers(this, capability);\n  } else if (callback) {\n    return connectCallbacks(this, capability, callback, errorCallback);\n  } else {\n    return connectPromise(this, capability);\n  }\n}\n\nexport function registerHandler (pokey, capability, options) {\n  let port = pokey.ports[capability];\n\n  if (port) {\n    //found port, set up capability\n    options.setupCapability(port);\n\n    if (options.promise) {\n      options.promise.\n        then(port.start).\n        catch(() => {});\n    } else {\n      port.start();\n    }\n  } else if (!pokey.receivedPorts) {\n    //no ports found, save handler for capability\n    pokey.handlers[capability] = options;\n  } else {\n    //no port sent for capability...\n    options.rejectCapability();\n  }\n}\n\nexport function portFor (capability) {\n  let port = this.ports[capability];\n  assert(port, \"You asked for the port for the capability named '\" + capability + \", but didn't have one\");\n  return port;\n}\n\n//todo - clean\nexport function connectCapabilities (capabilities, eventPorts) {\n  let pokey = this;\n  capabilities.forEach((capability, i) => {\n    let handler = pokey.handlers[capability],\n        port    = new Port(pokey, eventPorts[i]);\n\n    if (handler) {\n      Promise.resolve(handler.setupCapability(port)).\n        then(function () {\n          port.start();\n        }).\n        catch(() => {})\n    }\n\n    pokey.ports[capability] = port;\n  });\n\n  // for each handler without a capability, reject\n  for (let prop in pokey.handlers) {\n    if (!pokey.ports[prop]) {\n      pokey.handlers[prop].rejectCapability();\n    }\n  }\n\n  this.receivedPorts = true;\n}\n\nfunction connectPromise (pokey, capability) {\n  let deferred = new Deferred();\n  registerHandler(pokey, capability, {\n    promise         : deferred.promise,\n    setupCapability : function (port) {\n      deferred.resolve(port);\n      return deferred.promise;\n    },\n    rejectCapability: function () {\n      deferred.reject('Capability ' + capability + ' rejected. Make sure it is registered.');\n    }\n  });\n  return deferred.promise;\n}\n\nfunction connectCallbacks (pokey, capability, callback, errorCallback) {\n  registerHandler(pokey, capability, {\n    setupCapability : function (port) {\n      callback(port);\n    },\n    rejectCapability: function () {\n      if (errorCallback) {\n        errorCallback();\n      }\n    }\n  });\n}\n\n//todo - clean\n//todo - verify this works\nfunction connectConsumers (pokey, consumers) {\n  function setupCapability (Consumer, name) {\n    return function (port) {\n      let consumer          = new Consumer(port);\n      pokey.consumers[name] = consumer;\n      consumer.initialize(port, name);\n    };\n  }\n\n  function rejectCapability (prop) {\n    return function () {\n      consumers[prop].prototype.error();\n    };\n  }\n\n  for (let prop in consumers) {\n    registerHandler(pokey, prop, {\n      setupCapability : setupCapability(consumers[prop], prop),\n      rejectCapability: rejectCapability(prop)\n    });\n  }\n}","import Service from './service';\nimport Sandbox from './sandbox';\nimport { connect, portFor, connectCapabilities } from './connect';\n\nimport AdapterWorker from './adapter_worker';\nimport AdapterIFrame from './adapter_iframe';\n\nclass Pokey {\n  constructor (options) {\n\n    this.pokeyId   = 'pokey' + (+new Date());\n    this.requestId = 0;\n\n    this.consumers = {};\n    this.services  = [];\n\n    this.ports    = {};\n    this.handlers = {};\n\n    this.receivedPorts = false;\n\n    //default configuration\n    this.configuration = Object.assign({\n\n      //allow proxying of event callbacks\n      //includes load/connect events, + channel events 'on' and 'all'\n      eventCallback: (callback) => { return callback(); },\n\n      //security - allowSameOrigin on iFrames\n      allowSameOrigin: false,\n\n      //security - allow reconnections on iframe navigation?\n      reconnect: 'verify'\n\n    }, options);\n\n    this.adapters = {\n      iframe: new AdapterIFrame(),\n      worker: new AdapterWorker()\n\n      //in a future version maybe ... inline not secure though\n      //inline: new AdapterInline()\n    };\n\n    this.onCreate();\n  }\n\n  //noop for now, can be extended\n  onCreate () {}\n\n  /**\n   * entry point for containing environment to create child sandbox\n   * @param options with fields\n   * capabilities\n   * url - url for JS file that will initialize sandbox in sandboxed environment\n   * type - currently, only support 'iframe' (default)\n   */\n  createSandbox (options) {\n    return new Sandbox(this, options);\n  }\n\n  configure (params) {\n    return Object.assign(this.configuration, params);\n  }\n}\n\nObject.assign(Pokey.prototype, {\n  connect            : connect,\n  connectCapabilities: connectCapabilities,\n  portFor            : portFor\n});\n\nexport default Pokey;\n\n\n/****** auto initialization *****/\n\n/* in sandboxes, we want to automatically start things up to continue handshake process */\nfunction autoInitializeSandbox () {\n  if (typeof window !== 'undefined') {\n\n    //expose on window\n    //todo - encapsulate to allow multiple instances on page (should pass this into connectSandbox)\n    window.pokey = global.pokey = new Pokey();\n\n    //in the future, could handle inline workers here\n\n    if (window.parent && window.parent !== window) {\n      pokey.adapters.iframe.connectSandbox(pokey);\n    }\n  } else {\n\n    self.pokey = new Pokey();\n\n    //handle web workers\n    pokey.adapters.worker.connectSandbox(pokey);\n  }\n}\n\nautoInitializeSandbox();","class Port {\n  constructor (pokey, port) {\n    this.pokey = pokey;\n    this.port = port;\n    this._callbacks = [];\n  }\n\n  /**\n   register an event handler for a particular event name.\n\n   @param {String} eventName the name of the event\n   @param {Function} callback the callback to call when the event occurs\n   @param {*?} binding an optional value of `this` inside of the callback\n   */\n  on (eventName, callback, binding) {\n    var pokey = this.pokey;\n\n    function wrappedCallback (event) {\n      if (event.data.type === eventName) {\n        pokey.configuration.eventCallback(() => {\n          return callback.call(binding, event.data.data);\n        });\n      }\n    }\n\n    this._callbacks.push([callback, wrappedCallback]);\n    this.port.addEventListener('message', wrappedCallback);\n  }\n  /**\n   register an event handler that is called for all events that are sent to the port, e.g. wiretaps\n   */\n  all (callback, binding) {\n    let pokey = this.pokey;\n\n    function wrappedCallback (event) {\n      pokey.configuration.eventCallback(() => {\n        callback.call(binding, event.data.type, event.data.data);\n      });\n    }\n\n    this.port.addEventListener('message', wrappedCallback);\n  }\n\n  /**\n   unregister an event handler for an event name\n   and callback\n\n   @param {String} eventName the name of the event\n   @param {Function} callback a reference to the callback that was\n   passed into `.on`.\n   */\n  off (eventName, callback) {\n    var foundCallback;\n\n    for (var i = 0, l = this._callbacks.length; i < l; i++) {\n      foundCallback = this._callbacks[i];\n      if (foundCallback[0] === callback) {\n        this.port.removeEventListener('message', foundCallback[1]);\n      }\n    }\n  }\n\n  /**\n   sends an event to the other side of the connection\n\n   @param {String} eventName the name of the event\n   @param {Structured?} data optional data to pass along with the event\n   */\n  send (eventName, data) {\n    this.port.postMessage({\n      type: eventName,\n      data: data\n    });\n  }\n\n  /**\n   @private\n   Adapters should implement this to start receiving messages from the other side of the connection. It is up to the adapter to make sure that no messages are dropped if they are sent before `start` is called.\n   */\n  start () {\n    this.port.start();\n  }\n\n  /**\n   @private\n   Adapters should implement this to stop receiving messages from the other side of the connection.\n   */\n  close () {\n    var foundCallback;\n\n    for (var i = 0, l = this._callbacks.length; i < l; i++) {\n      foundCallback = this._callbacks[i];\n      this.port.removeEventListener('message', foundCallback[1]);\n    }\n    this._callbacks = [];\n\n    this.port.close();\n  }\n\n  /**\n   sends a request to the other side of the connection\n\n   @param {String} eventName the name of the request\n   @return {Promise} a promise that will be resolved with the value\n   provided by the other side of the connection, or rejected if the other\n   side indicates retrieving the value resulted in an error. The fulfillment\n   value must be structured data.\n   */\n  request (eventName) {\n    let pokey = this.pokey;\n    let port = this;\n    let args = [].slice.call(arguments, 1);\n\n    return new Promise ((resolve, reject) => {\n      let requestId = getRequestId(pokey);\n\n      let clearObservers = () => {\n        port.off('@response:' + eventName, observer);\n        port.off('@errorResponse:' + eventName, errorObserver);\n      };\n\n      let observer = (event) => {\n        if (event.requestId === requestId) {\n          clearObservers();\n          resolve(event.data);\n        }\n      };\n\n      let errorObserver = (event) => {\n        if (event.requestId === requestId) {\n          clearObservers();\n          reject(event.data);\n        }\n      };\n\n      port.on('@response:' + eventName, observer, port);\n      port.on('@errorResponse:' + eventName, errorObserver, port);\n      port.send('@request:' + eventName, { requestId: requestId, args: args });\n    });\n  }\n\n  /**\n   This method registers a callback to be called when a request is made\n   by the other side of the connection.\n\n   The callback will be called with any arguments passed in the request.  It\n   may either return a value directly, or return a promise if the value must be\n   retrieved asynchronously.\n\n   Examples:\n\n   // This completes the request immediately.\n   service.onRequest('name', function () {\n        return 'David';\n      });\n\n\n   // This completely the request asynchronously.\n   service.onRequest('name', function () {\n        return new Oasis.RSVP.Promise(function (resolve, reject) {\n          setTimeout( function() {\n            resolve('David');\n          }, 200);\n        });\n      });\n\n   @param {String} eventName the name of the request\n   @param {Function} callback the callback to be called when a request\n   is made.\n   @param {any?} binding the value of `this` in the callback\n   */\n  onRequest (eventName, callback, binding) {\n    var self = this;\n\n    this.on('@request:' + eventName, (data) => {\n      let requestId = data.requestId,\n          args = data.args,\n          getResponse = new Promise((resolve, reject) => {\n            var value = callback.apply(binding, args);\n            if (undefined !== value) {\n              resolve(value);\n            } else {\n              reject(\"@request:\" + eventName + \" [\" + data.requestId + \"] did not return a value.  If you want to return a literal `undefined` return `Promise.resolve(undefined)`\");\n            }\n          });\n\n      getResponse.then((value) => {\n        self.send('@response:' + eventName, {\n          requestId: requestId,\n          data: value\n        });\n      }, (error) => {\n        let value = error;\n        if (error instanceof Error) {\n          value = {\n            message: error.message,\n            stack: error.stack\n          };\n        }\n        self.send('@errorResponse:' + eventName, {\n          requestId: requestId,\n          data: value\n        });\n      });\n    });\n\n  }\n}\n\nfunction getRequestId (pokey) {\n  return pokey.pokeyId + '-' + pokey.requestId++;\n}\n\nexport default Port;","import {assert, Deferred} from './utils';\nimport Port from './port';\n\n//map sandbox.type to adapter name\nlet typeToAdapterNameMap = {\n  html  : 'iframe',\n  iframe: 'iframe',\n  worker: 'worker',\n  js    : 'worker'\n};\n\nclass Sandbox {\n  constructor (pokey, opts) {\n\n    let options = Object.assign({}, pokey.configuration, opts);\n\n    //todo - allow reconnect: 'any'\n    assert(['none', 'verify'].indexOf(options.reconnect) > -1, 'Reconnect must be either \"none\" or \"verify\".');\n\n    let capabilities = options.capabilities;\n    assert(capabilities, 'You must provide a list of capabilities you wish to expose/use on options.capabilities');\n\n    //default to iframe adapter\n    let adapterName = typeToAdapterNameMap[options.type] || 'iframe';\n    this.adapter    = pokey.adapters[adapterName];\n\n    //in case multiple instances\n    this.pokey = pokey;\n\n    //list of allowed capabilities\n    this._capabilitiesToConnect = this._filterCapabilities(capabilities);\n    //maps of port promises, keyed by capability\n    this.envPortDeferreds     = {};\n    this.sandboxPortDeferreds = {};\n\n    //let other things listen in\n    this.wiretaps     = [];\n    this.channels     = {};\n    this.capabilities = {};\n    this.options      = options;\n\n    this.firstLoad = true;\n\n    // use Deferred because will be resolved elsewhere (by the adapter)\n    this.loadDeferred = new Deferred();\n\n    this.promisePorts();\n\n    this.adapter.initializeSandbox(this);\n  }\n\n  createAndTransferCapabilities () {\n    if (!this.firstLoad) {\n      this.promisePorts();\n    }\n\n    this.createChannels();\n    this.connectPorts();\n\n    // subsequent calls to `createAndTransferCapabilities` requires new port promises\n    this.firstLoad = false;\n  }\n\n  promisePorts () {\n    this._capabilitiesToConnect.forEach((capability) => {\n      this.envPortDeferreds[capability]     = new Deferred();\n      this.sandboxPortDeferreds[capability] = new Deferred();\n    });\n  }\n\n  //todo - clean up\n  createChannels () {\n    let sandbox  = this,\n        services = this.options.services || {},\n        channels = this.channels;\n\n    // create port for each capability...\n    this._capabilitiesToConnect.forEach((capability) => {\n\n      let service = services[capability],\n          channel,\n          port;\n\n      // If an existing port is provided, just pass it along to the new sandbox.\n\n      // todo - this should probably be of class Port if possible\n      if (service instanceof Port) {\n        port                          = this.adapter.proxyPort(this, service);\n        this.capabilities[capability] = service;\n      }\n      else {\n        channel = channels[capability] = this.adapter.createChannel(sandbox.pokey);\n\n        var environmentPort = this.adapter.environmentPort(this, channel),\n            sandboxPort     = this.adapter.sandboxPort(this, channel);\n\n        environmentPort.all(function (eventName, data) {\n          this.wiretaps.forEach((wiretap) => {\n            wiretap(capability, {\n              type     : eventName,\n              data     : data,\n              direction: 'received'\n            });\n          });\n        }, sandbox);\n\n        this.wiretaps.forEach((wiretap) => {\n          var originalSend = environmentPort.send;\n\n          environmentPort.send = function (eventName, data) {\n            wiretap(capability, {\n              type     : eventName,\n              data     : data,\n              direction: 'sent'\n            });\n\n            originalSend.apply(environmentPort, arguments);\n          };\n        });\n\n        if (service) {\n          //container creating service for capability\n          // Generic\n          service                       = new service(environmentPort, this);\n          service.initialize(environmentPort, capability);\n          sandbox.pokey.services.push(service);\n          this.capabilities[capability] = service;\n        }\n\n        // Law of Demeter violation...\n        port = sandboxPort;\n\n        this.envPortDeferreds[capability].resolve(environmentPort);\n      }\n\n      //port created\n      this.sandboxPortDeferreds[capability].resolve(port);\n\n    }, sandbox);\n  }\n\n  connectPorts () {\n    let sandbox = this;\n\n    Promise.all(sandbox._capabilitiesToConnect.map(\n      (capability) => sandbox.sandboxPortDeferreds[capability].promise\n    ))\n      .then((ports) => {\n        //all ports created, transfer\n        sandbox.adapter.connectPorts(sandbox, ports);\n      });\n  }\n\n  destroyChannels () {\n    Object.keys(this.channels).forEach((key, index) => {\n      this.channels[key].destroy();\n      delete this.channels[key];\n    });\n    this.channels = {};\n  }\n\n  waitForLoad () {\n    return this.loadDeferred.promise;\n  }\n\n  wiretap (callback) {\n    this.wiretaps.push(callback);\n  }\n\n  connect (capability) {\n    let portDeferred = this.envPortDeferreds[capability] || {},\n        portPromise  = portDeferred.promise;\n\n    return portPromise || Promise.reject(\"Connect was called on '\" + capability + \"' but no such capability was registered.\");\n  }\n\n  start (options) {\n    this.adapter.startSandbox(this, options);\n  }\n\n  terminate () {\n    let sandbox = this;\n\n    if (this.isTerminated) {\n      return;\n    }\n    this.isTerminated = true;\n\n    this.adapter.terminateSandbox(this);\n\n    this.destroyChannels();\n\n    for (var index = 0; index < sandbox.pokey.services.length; index++) {\n      sandbox.pokey.services[index].destroy();\n      delete sandbox.pokey.services[index];\n    }\n    sandbox.pokey.services = [];\n  }\n\n  static onerror (error) {\n    throw error;\n  }\n\n  //todo - should ensure unique\n  _filterCapabilities (capabilities) {\n    return this.adapter.filterCapabilities(capabilities);\n  }\n\n  _waitForLoadDeferred () {\n    return this.loadDeferred.promise;\n  }\n\n}\n\nexport default Sandbox;","/**\n Base class services (in containing environment) + consumers (in sandbox) can subclass to implement several events + requests\n\n accepts\n\n initialize (function) - called when other side initiates connection\n\n events (object) - map of event names and callbacks, called when other end triggers respective event\n\n requests (object) - map of request names and callbacks, called when other end requests\n */\n\nclass Service {\n  constructor (port, sandbox, params = {}) {\n    let self = this;\n\n    this.port    = port;\n    this.sandbox = sandbox;\n\n    function wrapCb (cb) {\n      return function () {\n        return cb.apply(self, arguments);\n      }\n    }\n\n    for (let prop in params.events) {\n      let callback = params.events[prop];\n      port.on(prop, wrapCb(callback));\n    }\n\n    for (let prop in params.requests) {\n      let callback = params.requests[prop];\n      port.onRequest(prop, wrapCb(callback));\n    }\n  }\n\n  /**\n   This hook is called when the connection is established. When\n   `initialize` is called, it is safe to register listeners and\n   send data to the other side.\n\n   The implementation of Oasis makes it impossible for messages\n   to get dropped on the floor due to timing issues.\n\n   @param {OasisPort} port the port to the other side of the connection\n   @param {String} name the name of the service\n   */\n  initialize() {}\n\n  /**\n   This hooks is called when an attempt is made to connect to a capability the\n   environment does not provide.\n   */\n  error() {}\n\n  /**\n   This hook is called when the connection is stopped. When\n   `destroy` is called, it is safe to unregister listeners.\n   */\n  destroy() {}\n\n  /**\n   * send events to the other side of the\n   connection\n   * @param {String} eventName\n   * @param {Structured} data\n   * @returns {*}\n   * //verify this binding\n   */\n  send(...args) {\n    return this.port.send(...args);\n  }\n\n  /**\n   * request data from the other side of\n   the connection\n   * @param {String} requestName\n   * @param {Promise} promise resolved by other end\n   * @returns {*}\n   * //verify this binding\n   */\n  request(...args) {\n    return this.port.request(...args);\n  }\n}\n\nexport default Service;","export function noop () { }\n\nexport function assert (string, assertion) {\n  if (!assertion) {\n    throw new Error(string);\n  }\n}\n\nexport function isInWorker () {\n  return typeof Worker === 'undefined' && typeof Window === 'undefined';\n}\n\nexport function mustImplement (className, name) {\n  return function () {\n    throw new Error(\"Subclass of \" + className + \" must implement \" + name);\n  };\n}\n\n//RFC1422 v4 compliant UUID, using time for more uniqueness\nexport function UUID () {\n  function generateUUID () {\n    var d = new Date().getTime();\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = (d + Math.random() * 16) % 16 | 0;\n      d     = Math.floor(d / 16);\n      return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n    });\n  }\n}\n\nexport function isUrl (s) {\n  var regexp = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n  return regexp.test(s);\n}\n\n//ES6 classes dont let you created deferred (because can't guarantee exception handling), but annoying when want to resolve elsewhere...\nexport class Deferred {\n  constructor () {\n    defer(this);\n  }\n\n  static resolve (deferred, value) {\n    deferred.resolve(value);\n  }\n\n  static reject (deferred, value) {\n    deferred.reject(value);\n  }\n}\n\n//helper\nfunction defer (deferred) {\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject  = reject\n  });\n  return deferred\n}"]}